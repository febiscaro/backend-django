# Generated by Django 5.2.5 on 2025-08-13 13:11

import accounts.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cpf', models.CharField(help_text='Somente números (11 dígitos)', max_length=14, unique=True, verbose_name='CPF')),
                ('nome_completo', models.CharField(max_length=150, verbose_name='Nome completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail corporativo')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('setor', models.CharField(blank=True, default='', max_length=80, verbose_name='Setor')),
                ('cargo', models.CharField(blank=True, default='', max_length=80, verbose_name='Cargo')),
                ('perfil', models.CharField(choices=[('ADMIN', 'Administrador'), ('GESTOR', 'Gestor'), ('COLAB', 'Colaborador')], default='COLAB', max_length=10, verbose_name='Perfil de acesso')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
